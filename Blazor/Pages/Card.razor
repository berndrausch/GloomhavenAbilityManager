@page "/card/{CardIdParameter}"

@using GloomhavenAbilityManager.Logic.Contracts.Data
@using GloomhavenAbilityManager.Logic.Contracts.Interfaces
@inject IAbilityCardService CardService
@inject ICharacterClassService ClassService

@if (card == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>@card.Name (@ClassService.GetClass(card.ClassId).Name @card.Level)</p>
    <img src="@card.ImagePath" height="600" width="400">
    <p>
        <a href=@($"card\\{card.Id-1}")>Previous</a>
        <a href=@($"card\\{card.Id+1}")>Next</a>
    </p>
}

@code {

    private string cardIdParameter = "0";

    [Parameter]
    public string CardIdParameter
    {
        get
        {
            return cardIdParameter;
        }

        set
        {
            cardIdParameter = value;
            OnCardIdParameterChanged();
        }
    }

    private AbilityCard card;

    protected override void OnInitialized()
    {
        OnCardIdParameterChanged();
    }

    private void OnCardIdParameterChanged()
    {
        if (!int.TryParse(CardIdParameter, out int id))
        {
            id = 0;
        }

        card = CardService.GetCard(id);
    }
}
